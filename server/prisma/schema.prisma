generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model event {
  id                   Int           @id @default(autoincrement())
  shortTitle           String        @db.VarChar(255)
  longTitle            String        @db.VarChar(255)
  description          String?
  startTime            DateTime      @db.Timestamp(6)
  eventPictureLink     String?       @db.VarChar(255)
  locationId           Int           @unique
  location             eventLocation @relation(fields: [locationId], references: [id])
  orders               order[]
  ticketTypes          ticketType[]
}

model eventLocation {
  id      Int    @id @default(autoincrement())
  lat     Float
  lng     Float
  title   String @db.VarChar(255)
  address String @db.VarChar(255)
  event   event?
}

model order {
  id           Int      @id @default(autoincrement())
  userId       Int
  eventId      Int
  purchaseTime DateTime @db.Timestamp(6)
  event        event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tickets      ticket[]
}

model ticketType {
  id          Int      @id @default(autoincrement())
  title       String
  eventId     Int
  price       Float
  description String?
  numTickets  Int
  standard    Boolean  @default(false)
  tickets     ticket[]
  event       event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model ticket {
  id           Int        @id @default(autoincrement())
  orderId      Int
  ticketTypeId Int
  ticketType   ticketType @relation(fields: [ticketTypeId], references: [id], onDelete: Cascade)
  order        order      @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model user {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(255)
  email  String  @db.VarChar(255)
  orders order[]
}
